?read_tsv
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
s <- "chr21-29591159-T-A
s
""
"
s <- "chr21-29591159-T-A"
s
ar <- str_split_fixed(s, "-", 4)
ar
ar[1,]
ar[1,][1]
?glimpse
a <- c(5, "a")
class(a)
a
class(33)
print(cat(class(3)))
print(cat())
library(mtcars)
install.packages("mtcars")
help("mtcars")
df <- as.data.frame(mtcars)
View(df)
v1 <- c(1,2,3)
v1
sapply(df, as.character)
v
v <- c(1,2,3)
v[v<3]
1 %in% c(1,2)
runif(10, 0, 100)
?runif
?write.table
?write.delim
??write.delim
knitr::opts_chunk$set(eval = FALSE)
tail(mtcars)
tail(mtcars, 2)
# output: column names: data class: first 10 values.
str(mtcars)
which(is.na(mtcars), arr.ind=TRUE)
?which''
?which
?which
?which
# check if there blank values (no character)
mtcars[mtcars==""]
?View
?View
?dplyr::view
install.packages("caret")
install.package("EnvStats")
install.packages("EnvStats")
knitr::opts_chunk$set(eval = FALSE)
install.packages("missMethods")
install.packages("LOCF")
library(tidyverse)
library(missMethods)
library(MASS)
library(LOCF)
install.packages("LOCF")
install.packages("imputeTS")
install.packages("ggtext")
install.packages("imputeTS")
iris |> dplyr::filter(Species %in% c("setosa", "versicolor")) %>% ggplot(aes(x=Sepal.Width, fill=Species)) +
geom_histogram(bins = 10, position = "dodge") + #гістограма
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
geom_vline(data=sepal_means, aes(xintercept=Sepal.Width.Mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
iris |> dplyr::filter(Species %in% c("setosa", "versicolor")) |>  ggplot(aes(x=Sepal.Width, fill=Species)) +
geom_histogram(bins = 10, position = "dodge") + #гістограма
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
geom_vline(data=sepal_means, aes(xintercept=Sepal.Width.Mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
library(tidyverse)
iris |> dplyr::filter(Species %in% c("setosa", "versicolor")) |>  ggplot(aes(x=Sepal.Width, fill=Species)) +
geom_histogram(bins = 10, position = "dodge") + #гістограма
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
geom_vline(data=sepal_means, aes(xintercept=Sepal.Width.Mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
sepal_means <- iris %>% group_by(Species) %>% summarise(Sepal.Width.Mean = mean(Sepal.Width))
iris |> dplyr::filter(Species %in% c("setosa", "versicolor")) |>  ggplot(aes(x=Sepal.Width, fill=Species)) +
geom_histogram(bins = 10, position = "dodge") + #гістограма
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
geom_vline(data=sepal_means, aes(xintercept=Sepal.Width.Mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
sepal_means <- iris |>  group_by(Species) |>  summarise(Sepal.Width.Mean = mean(Sepal.Width))
iris |> dplyr::filter(Species %in% c("setosa", "versicolor")) |>  ggplot(aes(x=Sepal.Width, fill=Species)) +
geom_histogram(bins = 10, position = "dodge") + #гістограма
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
geom_vline(data=sepal_means, aes(xintercept=Sepal.Width.Mean, color=Species),
linetype="dashed")+
theme(legend.position="top")
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
tempdir()
usethis::edit_r_environ()
tempdir()
pak::pak(
c("arrow", "babynames", "curl", "duckdb", "gapminder",
"ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman",
"leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins",
"repurrrsive", "tidymodels", "tidyverse", "writexl")
)
tempdir()
tempdir()
?tempdir
tempdir()
system("Desktop/teaching_n_learning/ucu2024_bioinformatics_of_genomic_variation_analysis/data/week5_2_work/bash_example.sh")
reticulate::repl_python()
library(tidyverse)
library(palmerpenguins)
library(ggthemes)
library(stringr)
1 / 200 * 30
(59 + 73 + 2) / 3
sin(pi/2)
library(reticulate)
reticulate::repl_python()
reticulate::repl_python()
cars <- mtcars
View(cars)
1 / 200 * 30
(59 + 73 + 2) / 3
sin(pi/2)
1+2
reticulate::repl_python()
setwd("~/Desktop/teaching_n_learning/2025Q1-DAAD-sc-spatial/Module_1/S01/")
library(viridis)
library(ggthemes) ## Different themes
library(tidyverse)
library(lubridate)
library(nycflights13)
data(iris)
View(iris)
unique(iris$Species)
class(iris$Species)
iris$Species <- as.character(iris$Species)
unique(iris$Species)
class(iris$Species)
iris$Species_factor <- factor(iris$Species)
unique(iris$Species_factor)
levels <- c('virginica', 'versicolor', 'setosa')
iris$Species_factor2 <- factor(iris$Species, levels = levels)
unique(iris$Species_factor2)
levels2 <- c('virginica', 'versicolor')
iris$Species_factor3 <- factor(iris$Species, levels = levels2)
unique(iris$Species_factor3)
iris$Species_factor <- factor(iris$Species, levels = unique(iris$Species))
unique(iris$Species_factor)
iris$Species_factor <- fct_inorder(iris$Species)
levels(iris$Species_factor)
iris$Species_factor2 <- fct_reorder(iris$Species_factor, iris$Sepal.Width)
levels(iris$Species_factor2)
ggplot(iris)+geom_col(aes(Species_factor, Sepal.Width))
#Now it is in ascending order - when we use the recoded variable
ggplot(iris)+geom_col(aes(Species_factor2, Sepal.Width))
#You can also use fct_reorder command directly inside the ggplot
ggplot(iris)+geom_col(aes(fct_reorder(Species_factor, Sepal.Width), Sepal.Width))
?fct_infreq
?fct_rev
iris |> mutate(Species_factor = factor(Species)  |>
fct_infreq() |> fct_rev()) |>
ggplot(aes(Species_factor)) +
geom_bar()
ggplot(iris)+geom_smooth(aes(Sepal.Width, Sepal.Length,
color = fct_reorder2(Species_factor, Sepal.Width, Sepal.Length)))
iris <- iris |>
mutate(Species_factor2 = fct_recode(Species_factor,
'my label 1' ='versicolor',
'second label' = 'virginica',
'final label' = 'setosa' ))
iris <- iris |>
mutate(Species_factor2 = fct_recode(Species_factor,
'my label 1' ='versicolor',
'second label' = 'virginica',
'final label' = 'setosa' ))
unique(iris$Species_factor2)
fct_explicit_na(f, na_level = "(Missing)")
f <- factor(c("a", "b", "c", "d", NA), levels = c("b", "c", "d", "a"))
f
fct_explicit_na(f, na_level = "(Missing)")
sessionInfo()
library(tidyverse)
library(nycflights13)
library(viridis)
library(ggthemes) ## Different themes
##Different types of plots
data('flights')
data('weather')
months <- c(1, 3,4, 12)
flights_selected <- flights |> filter(month %in% months & origin == 'JFK')
flights_selected <- flights_selected |> mutate(delayed = ifelse(arr_delay>0,1,0),
time_gained = dep_delay - arr_delay,
.before = 1)
combined_data <- left_join(flights_selected, weather, by = c('origin', 'year', 'month', 'day', 'hour', 'time_hour'))
data_by_month <- combined_data |> group_by(month) |> summarize(mean_delay = mean(arr_delay, na.rm = TRUE),
median_delay = median(arr_delay, na.rm = TRUE),
mean_temp = mean(temp, na.rm = TRUE),
numb_flights = n(),
numb_delayed = sum(delayed, na.rm = TRUE),
prop_delayed = numb_delayed/numb_flights
combined_data <- combined_data |> group_by(carrier) |> mutate(mean_car_delay = mean(arr_delay, na.rm = TRUE)) |> ungroup()
combined_data <- combined_data |>
group_by(carrier) |>
mutate(mean_car_delay = mean(arr_delay, na.rm = TRUE)) |> ungroup()
combined_data <- combined_data |> mutate(delay_over_mean = arr_delay-mean_car_delay)
ggplot(data = combined_data)+geom_bar(aes(x = carrier))
ggplot(data = data_by_month)+geom_col(aes(x = month, y = numb_flights))
?geom_bar
ggplot(data = combined_data)+geom_point(aes(x = humid, y = dep_delay ))
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay ))
ggplot(data = data_by_month)+geom_col(aes(x = month, y = numb_flights))
data_by_month <- combined_data |> group_by(month) |> summarize(mean_delay = mean(arr_delay, na.rm = TRUE),
median_delay = median(arr_delay, na.rm = TRUE),
mean_temp = mean(temp, na.rm = TRUE),
numb_flights = n(),
numb_delayed = sum(delayed, na.rm = TRUE),
prop_delayed = numb_delayed/numb_flights
)
combined_data <- combined_data |>
group_by(carrier) |>
mutate(mean_car_delay = mean(arr_delay, na.rm = TRUE)) |> ungroup()
combined_data <- combined_data |> mutate(delay_over_mean = arr_delay-mean_car_delay)
ggplot(data = combined_data)+geom_bar(aes(x = carrier))
ggplot(data = data_by_month)+geom_col(aes(x = month, y = numb_flights))
ggplot(data = data_by_month)+geom_col(aes(x =factor(month), y = numb_flights))
ggplot(data = combined_data)+geom_point(aes(x = humid, y = dep_delay ))
#Smooth
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay ))
ggplot(data = combined_data, aes(x = humid, y = dep_delay ))+geom_point()+geom_smooth()
ggplot(data = data_by_month)+geom_line(aes(x = month, y = mean_delay))
ggplot(data = combined_data)+geom_point(aes(x = humid, y = dep_delay ))
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay ))
ggplot(data = combined_data, aes(x = humid, y = dep_delay ))+geom_point()+geom_smooth()
ggplot(data = data_by_month)+geom_line(aes(x = month, y = mean_delay))
flights_jan <- combined_data |> filter(month == 1)
ggplot(data = flights_jan)+geom_line(aes(x = time_hour, y = delay_over_mean))
flights_jan_1 <- combined_data |> filter(month == 1 & day == 1)
ggplot(data = flights_jan_1)+geom_line(aes(x = time_hour, y = delay_over_mean))
ggplot(data = combined_data)+geom_boxplot(aes(x = factor(month), y = arr_delay))
ggplot(data = combined_data)+geom_boxplot(aes(x = factor(month), y = arr_delay))
ggplot(data = combined_data, aes(x = humid, y = dep_delay ))+geom_point(alpha = 0.3)+
labs(x = 'Humidity', y = 'Delay')+ylim(0,25)
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay , color = factor(month)))
ggplot(data = combined_data)+geom_boxplot(aes(x = factor(month), y = arr_delay))
ggplot(data = combined_data, aes(x = humid, y = dep_delay ))+geom_point(alpha = 0.3)+
labs(x = 'Humidity', y = 'Delay')+ylim(0,25)
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay , color = factor(month)))
ggplot(data = combined_data, aes(x = humid, y = dep_delay ))+geom_point(alpha = 0.3)+
labs(x = 'Humidity', y = 'Delay')+ylim(0,25)
ggplot(data = combined_data)+geom_smooth(aes(x = humid, y = dep_delay), color  = 'red')
ggplot(data = data_by_month)+geom_col(aes(x =factor(month), y = numb_flights, fill = factor(month)))+scale_fill_viridis_d(name = 'Month')
ggplot(data = data_by_month)+geom_col(aes(x =factor(month), y = numb_flights, fill = factor(month)))+scale_fill_brewer(palette = 'Set1')
flights_plot + theme_minimal()
flights_plot <- ggplot(data = combined_data_top)+geom_smooth(aes(x = humid, y = dep_delay , color = factor(carrier)))+facet_grid(~month)
flights_plot + theme_minimal()
flights_plot <- ggplot(data = combined_data_top)+geom_smooth(aes(x = humid, y = dep_delay , color = factor(carrier)))+facet_grid(~month)
combined_data_top <- combined_data |> filter(carrier %in% carriers_top)
carriers_top <- c('B6', 'DL', '9E')
combined_data_top <- combined_data |> filter(carrier %in% carriers_top)
flights_plot <- ggplot(data = combined_data_top)+geom_smooth(aes(x = humid, y = dep_delay , color = factor(carrier)))+facet_grid(~month)
flights_plot
ggplot(data = data_by_month)+geom_col(aes(x =factor(month), y = numb_flights, fill = factor(month)))+scale_fill_viridis_d(name = 'Month')
ggplot(data = data_by_month)+geom_col(aes(x =factor(month), y = numb_flights, fill = factor(month)))+scale_fill_brewer(palette = 'Set1')
flights_plot + theme_minimal()
flights_plot + theme_light()
flights_plot_econ <- flights_plot + theme_economist()+theme(legend.position = 'none')+scale_color_economist()
